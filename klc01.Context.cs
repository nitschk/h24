//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace h24
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class klc01 : DbContext
    {
        public klc01()
            : base("name=klc01")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<categories> categories { get; set; }
        public virtual DbSet<competitors> competitors { get; set; }
        public virtual DbSet<controls> controls { get; set; }
        public virtual DbSet<course_codes> course_codes { get; set; }
        public virtual DbSet<courses> courses { get; set; }
        public virtual DbSet<legs> legs { get; set; }
        public virtual DbSet<logs> logs { get; set; }
        public virtual DbSet<settings> settings { get; set; }
        public virtual DbSet<si_readout> si_readout { get; set; }
        public virtual DbSet<si_stamps> si_stamps { get; set; }
        public virtual DbSet<slips> slips { get; set; }
        public virtual DbSet<teams> teams { get; set; }
        public virtual DbSet<v_comp_teams> v_comp_teams { get; set; }
        public virtual DbSet<entry_xml> entry_xml { get; set; }
        public virtual DbSet<results> results { get; set; }
        public virtual DbSet<v_teams_results> v_teams_results { get; set; }
        public virtual DbSet<api_queue> api_queue { get; set; }
        public virtual DbSet<v_readout_legs> v_readout_legs { get; set; }
        public virtual DbSet<api_queue_link> api_queue_link { get; set; }
        public virtual DbSet<v_new_roc_punches> v_new_roc_punches { get; set; }
        public virtual DbSet<roc_punches> roc_punches { get; set; }
        public virtual DbSet<leg_exceptions> leg_exceptions { get; set; }
        public virtual DbSet<v_iof_results> v_iof_results { get; set; }
    
        public virtual ObjectResult<Nullable<int>> get_competitor(Nullable<int> chip_id)
        {
            var chip_idParameter = chip_id.HasValue ?
                new ObjectParameter("chip_id", chip_id) :
                new ObjectParameter("chip_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("get_competitor", chip_idParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_fill_legs(Nullable<int> id_card, Nullable<int> course_id, Nullable<int> comp_id)
        {
            var id_cardParameter = id_card.HasValue ?
                new ObjectParameter("id_card", id_card) :
                new ObjectParameter("id_card", typeof(int));
    
            var course_idParameter = course_id.HasValue ?
                new ObjectParameter("course_id", course_id) :
                new ObjectParameter("course_id", typeof(int));
    
            var comp_idParameter = comp_id.HasValue ?
                new ObjectParameter("comp_id", comp_id) :
                new ObjectParameter("comp_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_fill_legs", id_cardParameter, course_idParameter, comp_idParameter);
        }
    
        public virtual int sp_fill_runs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_fill_runs");
        }
    
        public virtual ObjectResult<Nullable<int>> sp_guess_course(Nullable<int> readout_id)
        {
            var readout_idParameter = readout_id.HasValue ?
                new ObjectParameter("readout_id", readout_id) :
                new ObjectParameter("readout_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_guess_course", readout_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_insert_legs(Nullable<int> readout_id, Nullable<int> competitor_id, Nullable<int> course_id)
        {
            var readout_idParameter = readout_id.HasValue ?
                new ObjectParameter("readout_id", readout_id) :
                new ObjectParameter("readout_id", typeof(int));
    
            var competitor_idParameter = competitor_id.HasValue ?
                new ObjectParameter("competitor_id", competitor_id) :
                new ObjectParameter("competitor_id", typeof(int));
    
            var course_idParameter = course_id.HasValue ?
                new ObjectParameter("course_id", course_id) :
                new ObjectParameter("course_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_insert_legs", readout_idParameter, competitor_idParameter, course_idParameter);
        }
    
        public virtual int sp_insert_slips(Nullable<int> leg_id)
        {
            var leg_idParameter = leg_id.HasValue ?
                new ObjectParameter("leg_id", leg_id) :
                new ObjectParameter("leg_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_slips", leg_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_stamp2punches(Nullable<int> id_card)
        {
            var id_cardParameter = id_card.HasValue ?
                new ObjectParameter("id_card", id_card) :
                new ObjectParameter("id_card", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_stamp2punches", id_cardParameter);
        }
    
        public virtual int sp_stamp2punches2(Nullable<int> id_card)
        {
            var id_cardParameter = id_card.HasValue ?
                new ObjectParameter("id_card", id_card) :
                new ObjectParameter("id_card", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_stamp2punches2", id_cardParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<sp_search_competitors_Result> sp_search_competitors(string s)
        {
            var sParameter = s != null ?
                new ObjectParameter("s", s) :
                new ObjectParameter("s", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_search_competitors_Result>("sp_search_competitors", sParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_upsert_legs(Nullable<int> readout_id, Nullable<int> competitor_id, Nullable<int> course_id, Nullable<int> guessed_course, string upd)
        {
            var readout_idParameter = readout_id.HasValue ?
                new ObjectParameter("readout_id", readout_id) :
                new ObjectParameter("readout_id", typeof(int));
    
            var competitor_idParameter = competitor_id.HasValue ?
                new ObjectParameter("competitor_id", competitor_id) :
                new ObjectParameter("competitor_id", typeof(int));
    
            var course_idParameter = course_id.HasValue ?
                new ObjectParameter("course_id", course_id) :
                new ObjectParameter("course_id", typeof(int));
    
            var guessed_courseParameter = guessed_course.HasValue ?
                new ObjectParameter("guessed_course", guessed_course) :
                new ObjectParameter("guessed_course", typeof(int));
    
            var updParameter = upd != null ?
                new ObjectParameter("upd", upd) :
                new ObjectParameter("upd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_upsert_legs", readout_idParameter, competitor_idParameter, course_idParameter, guessed_courseParameter, updParameter);
        }
    
        public virtual int sp_generate_legs(string prefix)
        {
            var prefixParameter = prefix != null ?
                new ObjectParameter("prefix", prefix) :
                new ObjectParameter("prefix", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_generate_legs", prefixParameter);
        }
    
        public virtual int update_team_race_end(Nullable<int> comp_id)
        {
            var comp_idParameter = comp_id.HasValue ?
                new ObjectParameter("comp_id", comp_id) :
                new ObjectParameter("comp_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_team_race_end", comp_idParameter);
        }
    
        public virtual ObjectResult<string> get_one_entry(Nullable<int> team_id)
        {
            var team_idParameter = team_id.HasValue ?
                new ObjectParameter("team_id", team_id) :
                new ObjectParameter("team_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("get_one_entry", team_idParameter);
        }
    
        public virtual ObjectResult<string> get_one_entry_json(Nullable<int> team_id)
        {
            var team_idParameter = team_id.HasValue ?
                new ObjectParameter("team_id", team_id) :
                new ObjectParameter("team_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("get_one_entry_json", team_idParameter);
        }
    
        public virtual ObjectResult<string> get_slip_json(Nullable<int> readout_id)
        {
            var readout_idParameter = readout_id.HasValue ?
                new ObjectParameter("readout_id", readout_id) :
                new ObjectParameter("readout_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("get_slip_json", readout_idParameter);
        }
    
        public virtual ObjectResult<rpt_results_Result> rpt_results(Nullable<int> category_id)
        {
            var category_idParameter = category_id.HasValue ?
                new ObjectParameter("category_id", category_id) :
                new ObjectParameter("category_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_results_Result>("rpt_results", category_idParameter);
        }
    
        public virtual ObjectResult<sp_check_courses_Result> sp_check_courses()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_check_courses_Result>("sp_check_courses");
        }
    
        public virtual int sp_ins_xml_entries()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ins_xml_entries");
        }
    
        public virtual int sp_inset_wdr_slip(Nullable<int> comp_id)
        {
            var comp_idParameter = comp_id.HasValue ?
                new ObjectParameter("comp_id", comp_id) :
                new ObjectParameter("comp_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_inset_wdr_slip", comp_idParameter);
        }
    
        public virtual ObjectResult<string> get_one_competitor_json(Nullable<int> comp_id)
        {
            var comp_idParameter = comp_id.HasValue ?
                new ObjectParameter("comp_id", comp_id) :
                new ObjectParameter("comp_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("get_one_competitor_json", comp_idParameter);
        }
    
        public virtual ObjectResult<string> get_results_json(string cat_name)
        {
            var cat_nameParameter = cat_name != null ?
                new ObjectParameter("cat_name", cat_name) :
                new ObjectParameter("cat_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("get_results_json", cat_nameParameter);
        }
    
        public virtual int sp_update_xml_entries_team_bib()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_xml_entries_team_bib");
        }
    
        public virtual ObjectResult<string> get_course_results_json(string cat_name)
        {
            var cat_nameParameter = cat_name != null ?
                new ObjectParameter("cat_name", cat_name) :
                new ObjectParameter("cat_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("get_course_results_json", cat_nameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_legs_assign_first(string course_prefix, Nullable<int> category_id)
        {
            var course_prefixParameter = course_prefix != null ?
                new ObjectParameter("course_prefix", course_prefix) :
                new ObjectParameter("course_prefix", typeof(string));
    
            var category_idParameter = category_id.HasValue ?
                new ObjectParameter("category_id", category_id) :
                new ObjectParameter("category_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_legs_assign_first", course_prefixParameter, category_idParameter);
        }
    }
}
